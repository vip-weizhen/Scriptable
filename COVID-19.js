{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "red",
    "glyph" : "brain"
  },
  "name" : "‰∏≠ÂõΩÊØèÊó•Áñ´ÊÉÖ",
  "script" : "\/\/ Author: Pih\n\/\/ Update: 2022.01.11\n\nconst newBG = true \/\/ËÆæÁΩÆÊñ∞ÁöÑËÉåÊôØ\n\nconst innerColor = Color.blue()\nconst outerColor = Color.purple()\n\/\/ =================================\n\n\/\/ const TodayIncr\n\n\/\/ ======== Start ========\n\nconst webview = new WebView();\nawait webview.loadURL(\"https:\/\/i.snssdk.com\/forum\/ncov_data\/?data_type=%5B2%2C4%2C8%5D\");\n\nvar getData = `\n  function runit() {\n    const ord = document.querySelector('*').innerText;\nconst data = eval(\"(\"+ord+\")\");\nconst nationwide = eval(\"(\"+data.ncov_nation_data+\")\").nationwide\nconst Top10 = eval(\"(\"+data.ncov_nation_data+\")\").confirmedIncrProvinceTop10\nconst description = eval(\"(\"+data.ncov_nation_data+\")\").incrTips\nconst outputdata = {\"Top10\":Top10,\"description\":description,\"nationwide\":nationwide}\n\n    completion (outputdata);\n  }\n\n  runit();\n`\n\nlet TodayIncr = await webview.evaluateJavaScript(getData, true);\n\/\/ console.log(response)\n\/\/ log (typeof response)\n\/\/ ======== End ========\n\nlog(TodayIncr.nationwide[0])\nconst data = TodayIncr.nationwide\n\nconst covidnews = (await new Request(\"https:\/\/opendata.baidu.com\/data\/inner?tn=reserved_all_res_tn&dspName=iphone&from_sf=1&dsp=iphone&resource_id=28565&alr=1&query=%E5%9B%BD%E5%86%85%E6%96%B0%E5%9E%8B%E8%82%BA%E7%82%8E%E6%9C%80%E6%96%B0%E5%8A%A8%E6%80%81\").loadJSON()).Result[0].items_v2[0].aladdin_res.DisplayData.result.items\n\/\/ .loadString()).slice(17,-29)).docs\n\/\/ log(covidnews)\nconst chartDrawing = new DrawContext()\nchartDrawing.size = new Size(642, 221)\nchartDrawing.opaque=false\nchartDrawing.respectScreenScale=true\n\n\/\/ ######\nfillRect(20, 110, 590, 2, 0, new Color(\"333333\", 0.2))\n\n\/\/ fillRect(0, 110, 680, 120, 0, new Color(\"dddddd\", 0.1))\n\ndrawText(12, 5, 80, 80, \"ü¶†\", Color.white(), \"a\", 40, \"center\")\n\n\nvar max;\n\tfor(i = 0; i<30 ;i++)\n  {\n\tlet\ttemp = data[i].confirmedIncr;\n\t\tmax = (temp > max || max == undefined ? temp : max)\n\t}\nlog(max)\n\/\/ log(data.incTrend[data.incTrend.length-1].sure_cnt)\n\/\/ log(data.incTrend[data.incTrend.length-30].sure_cnt)\nconst deltaY = 50\/max\nfor(i = 0; i<30 ;i++)\n{\nlet\ttemp = data[29-i].confirmedIncr*deltaY \nlet width = 8,color = Color.green()\nif (i==29)\n{\ncolor = new Color(\"cf4442\",1)}\n\nfillRect(40+i*13.5, 100-temp, width, temp, 4, color)\n}\n\ndrawText(78, 15, 300, 60, \"ÂõΩÂÜÖÁñ´ÊÉÖ‰ø°ÊÅØ\", Color.white(), \"a\",24, \"left\")\n\n\/\/ drawText(330, 30, 120, 60, \"30Êó•Ë∂ãÂäøÂõæ\", Color.white(), \"a\",16, \"left\")\nlog(data[0].date.slice(-2))\n\n\n\/\/ drawText(30, 108, 572, 20, TodayIncr.description,Color.white(), \"a\", 12, \"center\")\n\n\n\/\/ ######\ndrawText(430, 18, 190, 60, data[0].date.slice(-2)+\"Êó•Êñ∞Â¢ûÁ°ÆËØä\", Color.white(), \"a\",22, \"center\")\n\nlet fontSize = 47\nif (Math.round(data[0].confirmedIncr) > 999)\n{fontSize = 40}\ndrawText(430, 52, 190, 60, \"+\"+Math.round(data[0].confirmedIncr).toString(), new Color(\"cf4442\",1), \"a\",fontSize, \"center\")\n\/\/ fillRect(0, 111, 642, 110, 0, new Color(\"121a2a\",0.4))\n\n\n\/\/ {\n\/\/ fillRect(30+i*10, 219, 6, 2, 0, Color.gray())\n\/\/ }\n\nvar IncrMax;\n\tfor(i = 0; i<(TodayIncr.Top10.length) ;i++)\n  {\nif(TodayIncr.Top10[i].inboundIncr == undefined)\n{TodayIncr.Top10[i].inboundIncr = 0}\nlet\ttemp = \nTodayIncr.Top10[i].confirmedIncr\n\/\/ log(\"ÊØèÈ°πÂÄº\"+temp)\n\tIncrMax = (temp > IncrMax || IncrMax == undefined ? temp : IncrMax)\n\t}\nconst incrDelta = 42\/IncrMax\nlet gap = (425\/TodayIncr.Top10.length)\n\/\/ log (\"ÈïøÂ∫¶:\"+ TodayIncr.length+\"Ôºågap:\"+ gap)\n\nfor(i = 0; i<(TodayIncr.Top10.length) ;i++)\n{\nlet\ttotalTemp = \n(TodayIncr.Top10[i].confirmedIncr)*incrDelta\nfillRect(37+i*gap, 174-totalTemp, 21, totalTemp, 0, innerColor)\nlet\ttemp = \n(TodayIncr.Top10[i].inboundIncr)*incrDelta\nfillRect(37+i*gap, 174-temp, 21, temp, 0, outerColor)\nlet inboundIncr = TodayIncr.Top10[i].inboundIncr\nif(inboundIncr==0)\n{inboundIncr=\"\"}\ndrawText(25+i*gap, 175, 45, 20, inboundIncr.toString(), outerColor, \"a\",14, \"center\")\/\/Â¢ÉÂ§ñËæìÂÖ•Êï∞\nlet increasedNum = TodayIncr.Top10[i].confirmedIncr- TodayIncr.Top10[i].inboundIncr\nif(increasedNum== 0)\n{increasedNum=\"\"}\ndrawText(25+i*gap, 158-totalTemp, 45, 20, increasedNum.toString(), innerColor, \"a\",14, \"center\")\/\/Êú¨ÂúüÊñ∞Â¢ûÊï∞\ndrawText(25+i*gap, 195, 45, 20, TodayIncr.Top10[i].name, new Color(\"ffffff\", 0.7), \"a\",14, \"center\")\/\/ÁúÅ‰ªΩÂêçÁß∞\n}\n\nfillRect(\n\/\/ 460-((10-TodayIncr.length)*43)\n490, 155, 80, 20, 0, innerColor)\ndrawText(\n\/\/ 515-((10-TodayIncr.length)*43), \n490,157, 80, 30, \"Êú¨ÂúüÊñ∞Â¢û\", new Color(\"ffffff\",0.7), \"a\",14, \"center\")\nfillRect(\n\/\/ 460-((10-TodayIncr.length)*43)\n490, 180, 80, 20, 0, outerColor)\ndrawText(\n\/\/ 515-((10-TodayIncr.length)*43)\n490, 182, 80, 30, \"Â¢ÉÂ§ñËæìÂÖ•\", new Color(\"ffffff\",0.7), \"a\",14, \"center\")\ndrawText(485, 130, 190, 60, \"Êñ∞Â¢ûTop 10\", new Color(\"ffffff\",0.7), \"a\",16, \"left\")\nconst widget = new ListWidget()\nwidget.setPadding(0, 0, 0, 0)\n\n\/\/ ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ËÉåÊôØÈÄâÊã©‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶\nconst files = FileManager.local()\nconst path = files.joinPath(files.documentsDirectory(), \"convid19\")\n    if (newBG && config.runsInApp)\n{\n  const img = await Photos.fromLibrary()\n      widget.backgroundImage = Addblur(img)\n      files.writeImage(path, img)\n}else{\n    if (config.runsInWidget) { \n      try {\n    widget.backgroundImage = Addblur(files.readImage(path))\n    log(\"ËØªÂèñÂõæÁâáÊàêÂäü\")\n} catch (e){\n  widget.backgroundColor = new Color(\"000000\", 1)\n  log(e.message)\n}    \n\n    } else {\n      try {\n    widget.backgroundImage = Addblur( files.readImage(path))\n\/\/     log(\"ËØªÂèñÂõæÁâáÊàêÂäü\")\n} catch (e){\n      const img = await Photos.fromLibrary()\n      widget.backgroundImage = Addblur(img)\n      files.writeImage(path, img)\n      log(e.message)\n    }\n  }\n}\nconst scale = Device.screenScale()\nconst width = getWidgetSize().w\nconst height = getWidgetSize().h\n\/\/ log (width)\nconst contentStack = widget.addStack()\ncontentStack.layoutVertically()\ncontentStack.size = new Size(width\/scale, height\/scale)\nconst InfoStack = contentStack.addStack()\nInfoStack.size = new Size(width\/scale, (221\/296)*height\/scale)\nInfoStack.addImage(chartDrawing.getImage())\nconst newsStack = contentStack.addStack()\/\/ \nnewsStack.backgroundColor = new Color(\"333333\", 0.08)\n\/\/ new Color(\"121a2a\", 1)\nnewsStack.layoutVertically()\nnewsStack.size = new Size(width\/scale, (75\/296)*height\/scale)\nnewsStack.setPadding(5, 15, 5, 15)\n\/\/ ##################\n\/\/ let now = currentDate()\nlet time1 = new Date(covidnews[0].eventTime*1000)\n\/\/ covidnews[0].eventTime\nlet df = new DateFormatter()\ndf.dateFormat = \"MM\/dd HH:mm\"\n\nconst news1 = newsStack.addText(df.string(time1)+\" \" + covidnews[0].eventDescription)\n  news1.font = Font.systemFont(10)\n  news1.textColor = Color.white()\n  news1.url = covidnews[0].eventUrl\n\n  newsStack.addSpacer(5)\n\/\/   \n\/\/   \nlet time2 = new Date(covidnews[1].eventTime*1000)\n\n    const news2 = newsStack.addText(df.string(time2)+\" \" + covidnews[1].eventDescription)\n  news2.font = Font.systemFont(10)\n  news2.textColor = Color.white()\n  news2.url = covidnews[1].eventUrl\n  \n\/\/ ##################\n\nScript.setWidget(widget)\nwidget.presentMedium()\nScript.complete()\n\n\nfunction fillRect (x,y,width,height,cornerradio,color)\n{\nlet path = new Path()\nlet rect = new Rect(x, y, width, height)\npath.addRoundedRect(rect, cornerradio, cornerradio)\nchartDrawing.addPath(path)\nchartDrawing.setFillColor(color)\nchartDrawing.fillPath()\n}\n\nfunction drawText(x, y, width,height,text,color,font,fontsize,alignment)\n  {\n    if (font==\"a\"){\nchartDrawing.setFont(Font.boldRoundedSystemFont(fontsize))}\nif (font==\"default\"){\nchartDrawing.setFont(Font.lightMonospacedSystemFont(fontsize))}\nif (font==\"semibold\"){\nchartDrawing.setFont(Font.semiboldSystemFont(fontsize))}\n  chartDrawing.setTextColor(color)\n  if(alignment == \"left\")\n  {chartDrawing.setTextAlignedLeft()}\n  if(alignment == \"center\")\n  {chartDrawing.setTextAlignedCenter()}\n  if(alignment == \"right\")\n  {chartDrawing.setTextAlignedRight()}\n  chartDrawing.drawTextInRect(text, new Rect(x, y, width, height))\n}\n\nfunction Addblur (Img)\n{\n  const drawing = new DrawContext()\n  drawing.size = Img.size\n  const rect = new Rect(0, 0, drawing.size.width, drawing.size.height)\n  drawing.drawImageInRect(Img, rect)\n  drawing.setFillColor(new Color(\"000000\", 0.02))\n  drawing.fillRect(rect)\n\n  let blurImg = drawing.getImage()\nreturn blurImg\n}\n\nfunction getWidgetSize ()\n{\nlet deviceSize = (Device.screenSize().height*scale).toString()\nlet deviceInfo = \n  {  \"2778\": {\n    \"models\"  : [\"12 Pro Max\"],\n    \"small\"   : { \"w\": 510,   \"h\":  510 },\n    \"medium\"  : { \"w\": 1092,  \"h\": 510 },\n    \"large\"   : { \"w\": 1092,  \"h\": 1146}\n  },\n\n  \"2532\": {\n    \"models\"  : [\"12\", \"12 Pro\"],\n    \"small\"   : {\"w\": 474,  \"h\": 474 },\n    \"medium\"  : {\"w\": 1014, \"h\": 474 },\n    \"large\"   : {\"w\": 1014, \"h\": 1062 }\n  },\n   \n  \"2688\": {\n    \"models\"  : [\"Xs Max\", \"11 Pro Max\"],\n    \"small\"   : {\"w\": 507,  \"h\": 507},\n    \"medium\"  : {\"w\": 1080, \"h\": 507},\n    \"large\"   : {\"w\": 1080, \"h\": 1137}\n  },\n  \n  \"1792\": {\n    \"models\"  : [\"11\", \"Xr\"],\n    \"small\"   : {\"w\": 338, \"h\": 338},\n    \"medium\"  : {\"w\": 720, \"h\": 338},\n    \"large\"   : {\"w\": 720, \"h\": 758}\n  },\n  \n  \"2436\": {\n    \"models\"  : [\"X\", \"Xs\", \"11 Pro\"],\n    \"small\"   : {\"w\": 465, \"h\": 465},\n    \"medium\"  : {\"w\": 987, \"h\": 465},\n    \"large\"   : {\"w\": 987, \"h\": 1035}\n  },\n  \n  \"2208\": {\n    \"models\"  : [\"6+\", \"6s+\", \"7+\", \"8+\"],\n    \"small\"   : {\"w\": 471, \"h\": 471},\n    \"medium\"  : {\"w\": 1044, \"h\": 471},\n    \"large\"   : {\"w\": 1044, \"h\": 1071}\n  },\n  \n  \"1334\": {\n    \"models\"  : [\"6\",\"6s\",\"7\",\"8\"],\n    \"small\"   : {\"w\": 296, \"h\": 296},\n    \"medium\"  : {\"w\": 642, \"h\": 296},\n    \"large\"   : {\"w\": 642, \"h\": 648}\n  },\n\n  \"1136\": {\n    \"models\"  : [\"5\",\"5s\",\"5c\",\"SE\"],\n    \"small\"   : {\"w\": 282, \"h\": 282},\n    \"medium\"  : {\"w\": 584, \"h\": 282},\n    \"large\"   : {\"w\": 584, \"h\": 622}\n  }\n}\n\nlet widgetSize = deviceInfo[deviceSize].medium\nreturn widgetSize\n\/\/ \n}\n",
  "share_sheet_inputs" : [

  ]
}
